{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","db","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObj","resumenDiv","Object","values","includes","noServicios","nombreTexto","value","trim","length","mostrarAlerta","alerta","mensaje","tipo","setTimeout","fechaCita","fechaInput","dia","Date","getUTCDay"],"mappings":"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","file":"bundle.js","sourcesContent":["let pagina = 1;\n\nconst cita = {\n    nombre: '',\n    fecha: '',\n    hora: '',\n    servicios: []\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    iniciarApp();\n});\n\nfunction iniciarApp() {\n    mostrarServicios();\n\n    //resalta el div actual segun el tab al que se presiona\n    mostrarSeccion();\n\n    //oculta o muestra una seccion segun el tab al que se presiona\n    cambiarSeccion();\n\n    //paginacion siguiente y anterior\n    paginaSiguiente();\n\n    paginaAnterior();\n\n    //Comprueba la pagina actual para ocultar o mostrar la paginacion\n    botonesPaginador();\n\n    //mostrar el resumen de la cita o mensaje de cerror en caso de no pasar validacion\n    mostrarResumen();\n\n    //almacena el nombre de la cita en el objeto\n    nombreCita();\n\n    //almacena la fecha de la cita en el objeto\n\n}\n\nfunction mostrarSeccion() {\n    //eliminar mostrar-seccion de la seccion anterior\n    const seccionAnterior = document.querySelector('.mostrar-seccion');\n\n    if( seccionAnterior ) {\n        seccionAnterior.classList.remove('mostrar-seccion');\n    }\n\n    const seccionActual = document.querySelector(`#paso-${pagina}`);\n    seccionActual.classList.add('mostrar-seccion');\n\n    //eliminar la clase de actual en el tab anterior\n    const tabAnterior = document.querySelector('.tabs .actual')\n\n    if ( tabAnterior ) {\n        tabAnterior.classList.remove('actual');\n    }\n\n    //resalta el tab actual\n    const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\n    tab.classList.add('actual');\n}\n\nfunction cambiarSeccion() {\n    const enlaces = document.querySelectorAll('.tabs button');\n\n    enlaces.forEach( enlace => {\n        enlace.addEventListener('click', e => {\n            e.preventDefault();\n\n            pagina = parseInt( e.target.dataset.paso );\n\n            //llamar la funcion de mostrar seccion\n            mostrarSeccion();\n\n            botonesPaginador();\n        })\n    })\n}\n\nasync function mostrarServicios() {\n    try {\n        const resultado = await fetch('./servicios.json');\n        const db = await resultado.json();\n\n        const { servicios } = db;\n\n       // Generar el HTML\n       servicios.forEach( servicio => {\n            const { id, nombre, precioÂ } = servicio;\n\n            // DOM Scripting\n            // Generar nombre de servicio\n            const nombreServicio = document.createElement('P');\n            nombreServicio.textContent = nombre;\n            nombreServicio.classList.add('nombre-servicio');\n\n            // Generar el precio del servicio\n            const precioServicio = document.createElement('P');\n            precioServicio.textContent = `$ ${precio}`;\n            precioServicio.classList.add('precio-servicio');\n\n            // Generar div contenedor de servicio\n            const servicioDiv = document.createElement('DIV');\n            servicioDiv.classList.add('servicio');\n            servicioDiv.dataset.idServicio = id;\n\n            // Selecciona un servicio para la cita\n            servicioDiv.onclick = seleccionarServicio;\n\n            // Inyectar precio y nombre al div de servicio\n            servicioDiv.appendChild(nombreServicio);\n            servicioDiv.appendChild(precioServicio);\n\n            // Inyectarlo en el HTML\n            document.querySelector('#servicios').appendChild(servicioDiv);\n       } )\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction seleccionarServicio(e) {\n    let elemento;\n\n    //forzar que el elemento al que le damos click sea el DIV\n    if( e.target.tagName === 'P' ) {\n        elemento = e.target.parentElement\n    } else {\n        elemento = e.target;\n    }\n\n    if( elemento.classList.contains('seleccionado') ) {\n        elemento.classList.remove('seleccionado')\n\n        const id = parseInt( elemento.dataset.idServicio );\n\n        eliminarServicio(id);\n    } else {\n        elemento.classList.add('seleccionado');\n\n        const servicioObj = {\n            id: parseInt ( elemento.dataset.idServicio ),\n            nombre: elemento.firstElementChild.textContent,\n            precio: elemento.firstElementChild.nextElementSibling.textContent,\n        }\n\n        //console.log(servicioObj)\n\n        agregarServicio(servicioObj);\n    }\n}\n\nfunction eliminarServicio(id) {\n    const { servicios } = cita;\n\n    cita.servicios = servicios.filter( servicio => servicio.id !== id );\n\n    console.log(cita);\n}\n\nfunction agregarServicio(servicioObj) {\n    const { servicios } = cita;\n\n    cita.servicios = [ ...servicios, servicioObj ];\n\n    console.log(cita);\n}\n\nfunction paginaSiguiente() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    paginaSiguiente.addEventListener('click', () => {\n        pagina++;\n\n        botonesPaginador();\n    })\n}\n\nfunction paginaAnterior() {\n    const paginaAnterior = document.querySelector('#anterior');\n    paginaAnterior.addEventListener('click', () => {\n        pagina--;\n\n        botonesPaginador();\n    })\n}\n\nfunction botonesPaginador() {\n    const paginaSiguiente = document.querySelector('#siguiente');\n    const paginaAnterior = document.querySelector('#anterior');\n\n    if( pagina === 1 ) {\n        paginaAnterior.classList.add('ocultar');\n    } else if ( pagina === 3 ) {\n        paginaSiguiente.classList.add('ocultar');\n        paginaAnterior.classList.remove('ocultar');\n    } else {\n        paginaAnterior.classList.remove('oculta');\n        paginaSiguiente.classList.remove('ocultar');\n    }\n\n    mostrarSeccion(); //cambia la seccion que se muestra por la de la pagina\n}\n\nfunction mostrarResumen() {\n    //destructuring\n    const { nombre, fecha, hora, servicios } = cita;\n\n    //seleccionar el resumen\n    const resumenDiv = document.querySelector('.contenido-resumen');\n\n    //validacion\n    if( Object.values(cita).includes('') ) {\n        const noServicios = document.createElement('P');\n        noServicios.textContent = 'Faltan datos de servicios, hora, fecha o nombre';\n        noServicios.classList.add('invalidar-cita');\n\n        //agregar a resumen Div\n        resumenDiv.appendChild(noServicios);\n    }\n}\n\nfunction nombreCita() {\n    const nombreInput = document.querySelector('#nombre');\n\n    nombreInput.addEventListener('input', e => {\n        const nombreTexto = e.target.value.trim();\n\n        //validacion de que nombreTexto debe tener algo\n        if( nombreTexto === '' || nombreTexto.length < 4) {\n            mostrarAlerta('Nombre no valido', 'error');\n        } else {\n            const alerta = document.querySelector('.alerta');\n\n            if( alerta ) {\n                alerta.remove();\n            }\n\n            cita.nombre = nombreTexto;\n        }\n    })\n}\n\nfunction mostrarAlerta(mensaje, tipo) {\n    //si hay alerta previa, no crear otra\n    const alertaPrevia = document.querySelector('.alerta');\n\n    if( alertaPrevia ) {\n        return;\n    }\n\n    const alerta = document.createElement('DIV');\n    alerta.textContent = mensaje; \n    alerta.classList.add('alerta');\n\n    if( tipo === 'error' ) {\n        alerta.classList.add('error')\n    }\n\n    //insertar en el HTML\n    const formulario = document.querySelector('.formulario');\n    formulario.appendChild( alerta );\n\n    //eliminar la alerta despues de unos segundos\n    setTimeout(() => {\n        alerta.remove();\n    }, 2000);\n}\n\nfunction fechaCita() {\n    const fechaInput = document.querySelector('#fecha');\n    fechaInput.addEventListener('input', e => {\n\n        const dia = new Date(e.target.value).getUTCDay();\n        \n        if([0, 6].includes(dia)) {\n            e.preventDefault();\n            fechaInput.value = '';\n            mostrarAlerta('Fines de Semana no son permitidos', 'error');\n        } else {\n            cita.fecha = fechaInput.value;\n\n            console.log(cita);\n        }\n    })\n}"]}